package org.wiredwidgets.cow.ac.client.ui;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;

/**
 * A globally accessible (via a singleton pattern) status bar for messages
 * and updates to the user.
 * Adapted from Hack #36 from the book, "Swing Hacks" by Marinacci and Adamson
 * @author RYANMILLER
 */
public class StatusBar extends javax.swing.JPanel {

    /** the singleton object */
    private static StatusBar instance;

    /** 
     * Creates new form StatusBar. See getInstance() for a handle.
     */
    private StatusBar() {
        initComponents();

        // 23 is the normal Windows Explorerish height for the status bar
        setPreferredSize(new Dimension(getWidth(), 23));
    }

    /**
     * Enforces singleton access
     */
    public static StatusBar getInstance() {
        if (instance == null)
            instance = new StatusBar();
        return instance;
    }

    /**
     * Sets the status bar's message
     * @param msg A message
     */
    public synchronized void setStatusText(String msg) {
        if (msg != null) {
            status.setText(msg);
        }
    }

    /**
     * Returns the status bar's current message
     * @return The currently displayed message.
     */
    public synchronized String getStatusText() {
        return status.getText();
    }

    @Override
    public void paintComponent(Graphics g) {
        super.paintComponent(g);

        int y = 0;
        g.setColor(new Color(156, 154, 140));
        g.drawLine(0, y, getWidth(), y);
        y++;
        g.setColor(new Color(196, 194, 183));
        g.drawLine(0, y, getWidth(), y);
        y++;
        g.setColor(new Color(218, 215, 201));
        g.drawLine(0, y, getWidth(), y);
        y++;
        g.setColor(new Color(233, 231, 217));
        g.drawLine(0, y, getWidth(), y);

        y = getHeight() - 3;
        g.setColor(new Color(233, 232, 218));
        g.drawLine(0, y, getWidth(), y);
        y++;
        g.setColor(new Color(233, 231, 216));
        g.drawLine(0, y, getWidth(), y);
        y++;
        g.setColor(new Color(221, 221, 220));
        g.drawLine(0, y, getWidth(), y);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rightPanel = new javax.swing.JPanel();
        contentPanel = new javax.swing.JPanel();
        status = new javax.swing.JLabel();

        setLayout(new java.awt.BorderLayout());

        rightPanel.setOpaque(false);
        rightPanel.setLayout(new java.awt.BorderLayout());
        add(rightPanel, java.awt.BorderLayout.EAST);

        contentPanel.setOpaque(false);

        status.setText(org.openide.util.NbBundle.getMessage(StatusBar.class, "StatusBar.status.text")); // NOI18N
        contentPanel.add(status);

        add(contentPanel, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel contentPanel;
    private javax.swing.JPanel rightPanel;
    private javax.swing.JLabel status;
    // End of variables declaration//GEN-END:variables

}
